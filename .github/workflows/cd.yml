name: Continuous Deployment

on:
  push:
    tags:
      - "v*.*.*"

env:
  # https://github.com/actions/setup-go/issues/491
  GOTOOLCHAIN: local

jobs:
  generate-changelog:
    runs-on: ubuntu-latest
    outputs:
      content: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          args: -v --latest --strip header
        env:
          GITHUB_REPO: ${{ github.repository }}

  publish-binaries:
    runs-on: ubuntu-latest
    needs: generate-changelog
    permissions:
      # https://github.com/sigstore/cosign/issues/1258#issuecomment-1002251233
      id-token: write # requires for cosign keyless signing
      contents: write # requires for goreleaser to write to GitHub release
      packages: write # requires for goreleaser to publish docker images
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '~1.24.1'
          check-latest: true
      # https://github.com/actions/checkout/issues/290#issuecomment-680260080
      - name: Force fetch upstream tags
        run: git fetch --tags --force
      # https://github.community/t5/GitHub-Actions/How-to-get-just-the-tag-name/m-p/32167/highlight/true#M1027
      - name: Print Go version and environment
        id: vars
        run: |
          printf "Using go at: $(which go)\n"
          printf "Go version: $(go version)\n"
          printf "\n\nGo environment:\n\n"
          go env
          printf "\n\nSystem environment:\n\n"
          env
          echo "version_tag=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

          # Add "pip install" CLI tools to PATH
          echo ~/.local/bin >> $GITHUB_PATH

          # Parse semver
          TAG=${GITHUB_REF/refs\/tags\//}
          SEMVER_RE='[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z\.-]*\)'
          TAG_MAJOR=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\1#"`
          TAG_MINOR=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\2#"`
          TAG_PATCH=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\3#"`
          TAG_SPECIAL=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\4#"`
          echo "tag_major=${TAG_MAJOR}" >> $GITHUB_OUTPUT
          echo "tag_minor=${TAG_MINOR}" >> $GITHUB_OUTPUT
          echo "tag_patch=${TAG_PATCH}" >> $GITHUB_OUTPUT
          echo "tag_special=${TAG_SPECIAL}" >> $GITHUB_OUTPUT
      - name: Validate commits and tag signatures
        run: |
          # Import key
          curl 'https://github.com/c3b2a7.gpg' | gpg --import
          echo "Verifying the tag: ${{ steps.vars.outputs.version_tag }}"
          # configure allowed_signers
          mkdir -p ~/.ssh && echo "32198721+c3b2a7@users.noreply.github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOg4JNc0p23h651BmlnZIurOjTNCc6nMox18sUTp60gP" > ~/.ssh/allowed_signers
          git config --global gpg.ssh.allowedSignersFile ~/.ssh/allowed_signers
          # Only accepted if signed by c3b2a7's key
          git verify-tag "${{ steps.vars.outputs.version_tag }}" || exit 1

      - name: Install Cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 #v3.9.2
      - name: Cosign version
        run: cosign version
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@7b36ad622f042cab6f59a75c2ac24ccb256e9b45 #v0.20.4
      - name: Syft version
        run: syft version
      - run: |
          cat > RELEASE_NOTES.md <<'EOF'
          ${{ needs.generate-changelog.outputs.content }}
          EOF
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v2'
          args: release --clean --release-notes=RELEASE_NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-install-script:
    needs: publish-binaries
    if: ${{ needs.publish-binaries.result == 'success' }}
    uses: "c3b2a7/.github/.github/workflows/release-install-script.yaml@main"
    with:
      tag: ${{ github.ref_name }}
    secrets:
      # needed for r2...
      R2_INSTALL_ACCESS_KEY_ID: ${{ secrets.R2_INSTALL_ACCESS_KEY_ID }}
      R2_INSTALL_SECRET_ACCESS_KEY: ${{ secrets.R2_INSTALL_SECRET_ACCESS_KEY }}
      R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
