# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

project_name: easy-ca-cli

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - darwin
      - linux
      - windows
      - freebsd
    goarch:
      - amd64
      - arm64
      - s390x
      - ppc64le
      - riscv64
    ignore:
      - goos: darwin
        goarch: ppc64le
      - goos: darwin
        goarch: s390x
      - goos: darwin
        goarch: riscv64
      - goos: windows
        goarch: ppc64le
      - goos: windows
        goarch: s390x
      - goos: windows
        goarch: riscv64
      - goos: freebsd
        goarch: ppc64le
      - goos: freebsd
        goarch: s390x
      - goos: freebsd
        goarch: riscv64
    # set the modified timestamp on the output binary to the git timestamp to ensure a reproducible build
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
      - -mod=readonly
    ldflags:
      - -s -w
      - -X github.com/c3b2a7/easy-ca-cli/cmd.version={{.Version}}
      - -X github.com/c3b2a7/easy-ca-cli/cmd.commit={{.FullCommit}}
      - -X github.com/c3b2a7/easy-ca-cli/cmd.date={{.Date}}
      - -X github.com/c3b2a7/easy-ca-cli/cmd.builtBy=goreleaser

nfpms:
  - license: "MIT"
    maintainer: "Finn Lee <finn.lee@qq.com>"
    homepage: "https://github.com/c3b2a7/easy-ca-cli"
    description: "A fast, simple certificate generation utility built in Go."
    formats:
      - rpm
      - deb

signs:
  - cmd: cosign
    id: checksum-sign
    artifacts: checksum
    signature: &signature "${artifact}.sig"
    certificate: &certificate "${artifact}.pem"
    args: &args [ "sign-blob", "--yes", "--output-signature=${signature}", "--output-certificate=${certificate}", "${artifact}" ]
  - cmd: cosign
    id: source-sign
    artifacts: source
    signature: *signature
    certificate: *certificate
    args: *args

sboms:
  - id: binary_sbom
    cmd: syft
    artifacts: binary
    documents:
      - >-
        {{ .ProjectName }}_{{- .Version }}_{{- .Os }}_
        {{- if eq .Arch "amd64" }}x86_64
        {{- else if eq .Arch "386" }}i386
        {{- else }}{{ .Arch }}{{ end }}
        {{- with .Arm }}v{{ . }}{{ end }}
        {{- with .Mips }}_{{ . }}{{ end }}
        {{- if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}.sbom.json
    args: &args [ "scan", "$artifact", "--output", "cyclonedx-json=${document}" ]
  - id: source_sbom
    cmd: syft
    artifacts: source
    documents:
      - '{{ .ProjectName }}_{{ .Version }}_src.sbom.json'
    args: *args

archives:
  - id: default
    formats: [ tar.gz ]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_{{- .Version }}_{{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- with .Arm }}v{{ . }}{{ end }}
      {{- with .Mips }}_{{ . }}{{ end }}
      {{- if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}
    format_overrides:
      - goos: windows
        formats: [ zip ]

source:
  enabled: true
  name_template: '{{ .ProjectName }}_{{ .Version }}_src'
  format: tar.gz

checksum:
  name_template: '{{ .ProjectName }}_{{- .Version }}_sha256_checksums.txt'
  algorithm: sha256

release:
  disable: true
changelog:
  disable: true
